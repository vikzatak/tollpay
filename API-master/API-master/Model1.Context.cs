//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DPTPWebAPI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DP_TPEntities : DbContext
    {
        public DP_TPEntities()
            : base("name=DP_TPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AF_DocTypeCodes> AF_DocTypeCodes { get; set; }
        public virtual DbSet<AF_ExceptionCodes> AF_ExceptionCodes { get; set; }
        public virtual DbSet<AF_GenericResponseCodes> AF_GenericResponseCodes { get; set; }
        public virtual DbSet<AF_TagResponseCodes> AF_TagResponseCodes { get; set; }
        public virtual DbSet<AF_VehicleClassificationCodes> AF_VehicleClassificationCodes { get; set; }
        public virtual DbSet<AppKey> AppKeys { get; set; }

        internal object DistributorAndTeamUnSoldsTags(string v)
        {
            throw new NotImplementedException();
        }

        public virtual DbSet<AxisSetuAPILogger> AxisSetuAPILoggers { get; set; }
        public virtual DbSet<Bank_CreateWalletAPI> Bank_CreateWalletAPI { get; set; }
        public virtual DbSet<Bank_CreationWalletAPIResponse> Bank_CreationWalletAPIResponse { get; set; }
        public virtual DbSet<Bank_CustDedupeAPI> Bank_CustDedupeAPI { get; set; }
        public virtual DbSet<Bank_CustDedupeAPIResponse> Bank_CustDedupeAPIResponse { get; set; }
        public virtual DbSet<Bank_FASTagEnquiry> Bank_FASTagEnquiry { get; set; }
        public virtual DbSet<Bank_OTPGenerate> Bank_OTPGenerate { get; set; }
        public virtual DbSet<Bank_OTPGenerationResponse> Bank_OTPGenerationResponse { get; set; }
        public virtual DbSet<Bank_OTPValidationAPI> Bank_OTPValidationAPI { get; set; }
        public virtual DbSet<Bank_RechargeRequest> Bank_RechargeRequest { get; set; }
        public virtual DbSet<Bank_RechargeResponse> Bank_RechargeResponse { get; set; }
        public virtual DbSet<Bank_RechargeStatusEnquiry> Bank_RechargeStatusEnquiry { get; set; }
        public virtual DbSet<Bank_RechargeStatusEnquiryResponse> Bank_RechargeStatusEnquiryResponse { get; set; }
        public virtual DbSet<Bank_StatusEnquiryAPI> Bank_StatusEnquiryAPI { get; set; }
        public virtual DbSet<Bank_StatusEnquiryAPIResponse> Bank_StatusEnquiryAPIResponse { get; set; }
        public virtual DbSet<Bank_TagIssuance> Bank_TagIssuance { get; set; }
        public virtual DbSet<Bank_UpdateCIFAPI> Bank_UpdateCIFAPI { get; set; }
        public virtual DbSet<Bank_VehicleStatus> Bank_VehicleStatus { get; set; }
        public virtual DbSet<Bank_WalletBalance> Bank_WalletBalance { get; set; }
        public virtual DbSet<Bank_walletStatement> Bank_walletStatement { get; set; }
        public virtual DbSet<Distributor_Bill> Distributor_Bill { get; set; }
        public virtual DbSet<Distributor_BillDetails> Distributor_BillDetails { get; set; }
        public virtual DbSet<DistributorCreditAccount> DistributorCreditAccounts { get; set; }
        public virtual DbSet<ecom_RFID> ecom_RFID { get; set; }
        public virtual DbSet<IndusBank_APILogs> IndusBank_APILogs { get; set; }
        public virtual DbSet<IndusInd_CustomerRegistration> IndusInd_CustomerRegistration { get; set; }
        public virtual DbSet<IndusInd_Regions> IndusInd_Regions { get; set; }
        public virtual DbSet<IndusInd_TagRegistration> IndusInd_TagRegistration { get; set; }
        public virtual DbSet<IndusInd_TagStockDetails> IndusInd_TagStockDetails { get; set; }
        public virtual DbSet<IndusInd_Token_Secrete> IndusInd_Token_Secrete { get; set; }
        public virtual DbSet<IndusInd_VehicleClassDetails> IndusInd_VehicleClassDetails { get; set; }
        public virtual DbSet<IssuerFASTag> IssuerFASTags { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<MapperVehicleClass> MapperVehicleClasses { get; set; }
        public virtual DbSet<PaymentGatewayResponse> PaymentGatewayResponses { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<RFID_Tracker> RFID_Tracker { get; set; }
        public virtual DbSet<RouteTollsQuery> RouteTollsQueries { get; set; }
        public virtual DbSet<RTO> RTOes { get; set; }
        public virtual DbSet<tagActivateSuspendClose> tagActivateSuspendCloses { get; set; }
        public virtual DbSet<TollPayWallet> TollPayWallets { get; set; }
        public virtual DbSet<TollPlaza> TollPlazas { get; set; }
        public virtual DbSet<TollPlazaEmployee> TollPlazaEmployees { get; set; }
        public virtual DbSet<TollPlazzaIPAccess> TollPlazzaIPAccesses { get; set; }
        public virtual DbSet<TollPlazzPayment> TollPlazzPayments { get; set; }
        public virtual DbSet<TollVehicleType> TollVehicleTypes { get; set; }
        public virtual DbSet<TranP_MaterialTypes> TranP_MaterialTypes { get; set; }
        public virtual DbSet<TranP_TruckTrip_Payment> TranP_TruckTrip_Payment { get; set; }
        public virtual DbSet<TranP_TruckTrips> TranP_TruckTrips { get; set; }
        public virtual DbSet<TranP_TruckTypes> TranP_TruckTypes { get; set; }
        public virtual DbSet<User_Login_Audit> User_Login_Audit { get; set; }
        public virtual DbSet<User_Trip_Payment> User_Trip_Payment { get; set; }
        public virtual DbSet<User_Trips> User_Trips { get; set; }
        public virtual DbSet<User_Vehicle> User_Vehicle { get; set; }
        public virtual DbSet<UserBankDetail> UserBankDetails { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserTollTracker> UserTollTrackers { get; set; }
        public virtual DbSet<HistoryTollPlazza> HistoryTollPlazzas { get; set; }
    
        public virtual ObjectResult<AccountingofTagStackByDistributor_Result> AccountingofTagStackByDistributor(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccountingofTagStackByDistributor_Result>("AccountingofTagStackByDistributor", vdistParameter);
        }
    
        public virtual ObjectResult<ASPDistributeorStockVCAndTagsAll_Result> ASPDistributeorStockVCAndTagsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributeorStockVCAndTagsAll_Result>("ASPDistributeorStockVCAndTagsAll");
        }
    
        public virtual ObjectResult<ASPDistributerStockBySingleVehicleTypeQauntity_Result> ASPDistributerStockBySingleVehicleTypeQauntity(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributerStockBySingleVehicleTypeQauntity_Result>("ASPDistributerStockBySingleVehicleTypeQauntity", vdistParameter);
        }
    
        public virtual ObjectResult<ASPDistributerStockBySingleVehicleTypeTags_Result> ASPDistributerStockBySingleVehicleTypeTags(string vehicle_type)
        {
            var vehicle_typeParameter = vehicle_type != null ?
                new ObjectParameter("Vehicle_type", vehicle_type) :
                new ObjectParameter("Vehicle_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributerStockBySingleVehicleTypeTags_Result>("ASPDistributerStockBySingleVehicleTypeTags", vehicle_typeParameter);
        }
    
        public virtual ObjectResult<ASPDistributerStockVehicleTypeAndQauntityAll_Result> ASPDistributerStockVehicleTypeAndQauntityAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributerStockVehicleTypeAndQauntityAll_Result>("ASPDistributerStockVehicleTypeAndQauntityAll");
        }
    
        public virtual ObjectResult<Nullable<int>> ASPDistributorAvailableTotalCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPDistributorAvailableTotalCount");
        }
    
        public virtual ObjectResult<ASPDistributorStockAllTagsBySingleDistributer_Result> ASPDistributorStockAllTagsBySingleDistributer(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributorStockAllTagsBySingleDistributer_Result>("ASPDistributorStockAllTagsBySingleDistributer", vdistParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ASPDistributorStockSingleTotalCount(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPDistributorStockSingleTotalCount", vdistParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ASPDistributorTagCount(string vDistInd, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vDistIndParameter = vDistInd != null ?
                new ObjectParameter("vDistInd", vDistInd) :
                new ObjectParameter("vDistInd", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPDistributorTagCount", vDistIndParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ASPDistributorTagTotalCost(string vDistInd, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vDistIndParameter = vDistInd != null ?
                new ObjectParameter("vDistInd", vDistInd) :
                new ObjectParameter("vDistInd", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPDistributorTagTotalCost", vDistIndParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPDistributorWiseTeamCountandTagCount_Result> ASPDistributorWiseTeamCountandTagCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributorWiseTeamCountandTagCount_Result>("ASPDistributorWiseTeamCountandTagCount");
        }
    
        public virtual ObjectResult<ASPGetAllDistributerTotalTagCount_Result> ASPGetAllDistributerTotalTagCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPGetAllDistributerTotalTagCount_Result>("ASPGetAllDistributerTotalTagCount");
        }
    
        public virtual ObjectResult<ASPInwardQauntityByVehicleTypeAll_Result> ASPInwardQauntityByVehicleTypeAll(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardQauntityByVehicleTypeAll_Result>("ASPInwardQauntityByVehicleTypeAll", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPInwardSingleVCAllTags_Result> ASPInwardSingleVCAllTags(string vehicle_type, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vehicle_typeParameter = vehicle_type != null ?
                new ObjectParameter("Vehicle_type", vehicle_type) :
                new ObjectParameter("Vehicle_type", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardSingleVCAllTags_Result>("ASPInwardSingleVCAllTags", vehicle_typeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ASPInwardTotalCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPInwardTotalCount");
        }
    
        public virtual ObjectResult<ASPOutwardAllDistributerVCQauntityCost_Result> ASPOutwardAllDistributerVCQauntityCost(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardAllDistributerVCQauntityCost_Result>("ASPOutwardAllDistributerVCQauntityCost", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardALLVCTagsAndCostBySingleDitributor_Result> ASPOutwardALLVCTagsAndCostBySingleDitributor(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardALLVCTagsAndCostBySingleDitributor_Result>("ASPOutwardALLVCTagsAndCostBySingleDitributor", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardAllVCTagsByAllDitributor_Result> ASPOutwardAllVCTagsByAllDitributor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardAllVCTagsByAllDitributor_Result>("ASPOutwardAllVCTagsByAllDitributor");
        }
    
        public virtual ObjectResult<ASPOutwardQauntityByDate_Result> ASPOutwardQauntityByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardQauntityByDate_Result>("ASPOutwardQauntityByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardSingleDistributerVCQauntity_Result> ASPOutwardSingleDistributerVCQauntity(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardSingleDistributerVCQauntity_Result>("ASPOutwardSingleDistributerVCQauntity", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardTagsBySingleDitributor_Result> ASPOutwardTagsBySingleDitributor(string vdist, string vehicle_Type, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("Vehicle_Type", vehicle_Type) :
                new ObjectParameter("Vehicle_Type", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardTagsBySingleDitributor_Result>("ASPOutwardTagsBySingleDitributor", vdistParameter, vehicle_TypeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ASPOutwardTotalTagAll(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPOutwardTotalTagAll", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardVCTagsBySingleDitributer_Result> ASPOutwardVCTagsBySingleDitributer(string vdist, string vehicle_Type, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("Vehicle_Type", vehicle_Type) :
                new ObjectParameter("Vehicle_Type", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardVCTagsBySingleDitributer_Result>("ASPOutwardVCTagsBySingleDitributer", vdistParameter, vehicle_TypeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleQauntityByAllDistributorByDate_Result> ASPSaleQauntityByAllDistributorByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleQauntityByAllDistributorByDate_Result>("ASPSaleQauntityByAllDistributorByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleQauntityBySingleDistributorByDate_Result> ASPSaleQauntityBySingleDistributorByDate(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleQauntityBySingleDistributorByDate_Result>("ASPSaleQauntityBySingleDistributorByDate", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportByAllDistributerAndSalesTeamTagsSold_Result> ASPSaleReportByAllDistributerAndSalesTeamTagsSold()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByAllDistributerAndSalesTeamTagsSold_Result>("ASPSaleReportByAllDistributerAndSalesTeamTagsSold");
        }
    
        public virtual ObjectResult<ASPSaleReportBySingleDistributerAndSalesTeamAllTagsSold_Result> ASPSaleReportBySingleDistributerAndSalesTeamAllTagsSold(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportBySingleDistributerAndSalesTeamAllTagsSold_Result>("ASPSaleReportBySingleDistributerAndSalesTeamAllTagsSold", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportSingleVehicleTagsByAllDitributer_Result> ASPSaleReportSingleVehicleTagsByAllDitributer(string vehicle_Type, Nullable<System.DateTime> created_Date)
        {
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("vehicle_Type", vehicle_Type) :
                new ObjectParameter("vehicle_Type", typeof(string));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportSingleVehicleTagsByAllDitributer_Result>("ASPSaleReportSingleVehicleTagsByAllDitributer", vehicle_TypeParameter, created_DateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportSingleVehicleTagsBySingleDitributer_Result> ASPSaleReportSingleVehicleTagsBySingleDitributer(string vdist, string vehicle_Type, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("vehicle_Type", vehicle_Type) :
                new ObjectParameter("vehicle_Type", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportSingleVehicleTagsBySingleDitributer_Result>("ASPSaleReportSingleVehicleTagsBySingleDitributer", vdistParameter, vehicle_TypeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ASPSaleReportTotalCountOfTagsSoldByDistributerAndSalesTeam(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPSaleReportTotalCountOfTagsSoldByDistributerAndSalesTeam", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSalesPersonListByDitributerID_Result> ASPSalesPersonListByDitributerID(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSalesPersonListByDitributerID_Result>("ASPSalesPersonListByDitributerID", vdistParameter);
        }
    
        public virtual ObjectResult<ASPTollpayStockAllTags_Result> ASPTollpayStockAllTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStockAllTags_Result>("ASPTollpayStockAllTags");
        }
    
        public virtual ObjectResult<ASPTollpayStockAllVehicleTypeQaunity_Result> ASPTollpayStockAllVehicleTypeQaunity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStockAllVehicleTypeQaunity_Result>("ASPTollpayStockAllVehicleTypeQaunity");
        }
    
        public virtual ObjectResult<ASPTollpayStockByVehicleTypeAllTagsDetails_Result> ASPTollpayStockByVehicleTypeAllTagsDetails(string vehicle_Type)
        {
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("Vehicle_Type", vehicle_Type) :
                new ObjectParameter("Vehicle_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStockByVehicleTypeAllTagsDetails_Result>("ASPTollpayStockByVehicleTypeAllTagsDetails", vehicle_TypeParameter);
        }
    
        public virtual ObjectResult<ASPTollpayStockByVehicleTypeTagsDetails_Result> ASPTollpayStockByVehicleTypeTagsDetails(string vehicle_Type)
        {
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("Vehicle_Type", vehicle_Type) :
                new ObjectParameter("Vehicle_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStockByVehicleTypeTagsDetails_Result>("ASPTollpayStockByVehicleTypeTagsDetails", vehicle_TypeParameter);
        }
    
        public virtual ObjectResult<ASPTollpayStockSingleVehicleTypeQaunity_Result> ASPTollpayStockSingleVehicleTypeQaunity(string vehicle_Type)
        {
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("Vehicle_Type", vehicle_Type) :
                new ObjectParameter("Vehicle_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStockSingleVehicleTypeQaunity_Result>("ASPTollpayStockSingleVehicleTypeQaunity", vehicle_TypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ASPTollpayStockTotal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ASPTollpayStockTotal");
        }
    
        public virtual ObjectResult<ASPTollpayStockVCAndTags_Result> ASPTollpayStockVCAndTags(string vehicle_Type)
        {
            var vehicle_TypeParameter = vehicle_Type != null ?
                new ObjectParameter("Vehicle_Type", vehicle_Type) :
                new ObjectParameter("Vehicle_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStockVCAndTags_Result>("ASPTollpayStockVCAndTags", vehicle_TypeParameter);
        }
    
        public virtual ObjectResult<ASPTransactionDetails_Result> ASPTransactionDetails(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTransactionDetails_Result>("ASPTransactionDetails", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ChartOnLineUserCount_Result> ChartOnLineUserCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartOnLineUserCount_Result>("ChartOnLineUserCount");
        }
    
        public virtual ObjectResult<ChartRollWiseEmployeeCounts_Result> ChartRollWiseEmployeeCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartRollWiseEmployeeCounts_Result>("ChartRollWiseEmployeeCounts");
        }
    
        public virtual ObjectResult<ChartSingleTollWiseAndDateWiseVehicleDetails_Result> ChartSingleTollWiseAndDateWiseVehicleDetails(Nullable<int> tollNo, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartSingleTollWiseAndDateWiseVehicleDetails_Result>("ChartSingleTollWiseAndDateWiseVehicleDetails", tollNoParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ChartSingleTollWiseTodayCollection_Result> ChartSingleTollWiseTodayCollection(Nullable<int> tollNo)
        {
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartSingleTollWiseTodayCollection_Result>("ChartSingleTollWiseTodayCollection", tollNoParameter);
        }
    
        public virtual ObjectResult<ChartSingleTollWiseTodayVehicleDetails_Result> ChartSingleTollWiseTodayVehicleDetails(Nullable<int> tollNo)
        {
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartSingleTollWiseTodayVehicleDetails_Result>("ChartSingleTollWiseTodayVehicleDetails", tollNoParameter);
        }
    
        public virtual ObjectResult<ChartTollNoAndDateWiseTotalCollection_Result> ChartTollNoAndDateWiseTotalCollection(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> tollNO)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var tollNOParameter = tollNO.HasValue ?
                new ObjectParameter("TollNO", tollNO) :
                new ObjectParameter("TollNO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartTollNoAndDateWiseTotalCollection_Result>("ChartTollNoAndDateWiseTotalCollection", startdateParameter, enddateParameter, tollNOParameter);
        }
    
        public virtual ObjectResult<ChartTollWiseHistoryCollection_Result> ChartTollWiseHistoryCollection(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> tollNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartTollWiseHistoryCollection_Result>("ChartTollWiseHistoryCollection", startDateParameter, endDateParameter, tollNoParameter);
        }
    
        public virtual ObjectResult<ChartTollWiseTodayCollection_Result> ChartTollWiseTodayCollection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartTollWiseTodayCollection_Result>("ChartTollWiseTodayCollection");
        }
    
        public virtual int ClearAxisBankAPITables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearAxisBankAPITables");
        }
    
        public virtual int CreateAdminPanelUser(string username, string password, string address, string userEmail, string mobile1)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var mobile1Parameter = mobile1 != null ?
                new ObjectParameter("mobile1", mobile1) :
                new ObjectParameter("mobile1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAdminPanelUser", usernameParameter, passwordParameter, addressParameter, userEmailParameter, mobile1Parameter);
        }
    
        public virtual int CreateHistoryTollPlazzTruncate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateHistoryTollPlazzTruncate");
        }
    
        public virtual int CreateTrip(Nullable<int> userid, string startloc, string endloc, string resulttolllist, Nullable<decimal> totalpaymentAmt, string tripPaymentMode, string paymentRecieptno, string tripPaymentTransationId, string tripPaymentGateway, string vehicleNo, string vehicletype, string triptype, Nullable<System.DateTime> tripstartdate, Nullable<System.DateTime> tripenddate, string driverMobileNo, string driverOwnerMobNo)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var startlocParameter = startloc != null ?
                new ObjectParameter("startloc", startloc) :
                new ObjectParameter("startloc", typeof(string));
    
            var endlocParameter = endloc != null ?
                new ObjectParameter("endloc", endloc) :
                new ObjectParameter("endloc", typeof(string));
    
            var resulttolllistParameter = resulttolllist != null ?
                new ObjectParameter("resulttolllist", resulttolllist) :
                new ObjectParameter("resulttolllist", typeof(string));
    
            var totalpaymentAmtParameter = totalpaymentAmt.HasValue ?
                new ObjectParameter("totalpaymentAmt", totalpaymentAmt) :
                new ObjectParameter("totalpaymentAmt", typeof(decimal));
    
            var tripPaymentModeParameter = tripPaymentMode != null ?
                new ObjectParameter("tripPaymentMode", tripPaymentMode) :
                new ObjectParameter("tripPaymentMode", typeof(string));
    
            var paymentRecieptnoParameter = paymentRecieptno != null ?
                new ObjectParameter("paymentRecieptno", paymentRecieptno) :
                new ObjectParameter("paymentRecieptno", typeof(string));
    
            var tripPaymentTransationIdParameter = tripPaymentTransationId != null ?
                new ObjectParameter("TripPaymentTransationId", tripPaymentTransationId) :
                new ObjectParameter("TripPaymentTransationId", typeof(string));
    
            var tripPaymentGatewayParameter = tripPaymentGateway != null ?
                new ObjectParameter("TripPaymentGateway", tripPaymentGateway) :
                new ObjectParameter("TripPaymentGateway", typeof(string));
    
            var vehicleNoParameter = vehicleNo != null ?
                new ObjectParameter("vehicleNo", vehicleNo) :
                new ObjectParameter("vehicleNo", typeof(string));
    
            var vehicletypeParameter = vehicletype != null ?
                new ObjectParameter("vehicletype", vehicletype) :
                new ObjectParameter("vehicletype", typeof(string));
    
            var triptypeParameter = triptype != null ?
                new ObjectParameter("triptype", triptype) :
                new ObjectParameter("triptype", typeof(string));
    
            var tripstartdateParameter = tripstartdate.HasValue ?
                new ObjectParameter("tripstartdate", tripstartdate) :
                new ObjectParameter("tripstartdate", typeof(System.DateTime));
    
            var tripenddateParameter = tripenddate.HasValue ?
                new ObjectParameter("tripenddate", tripenddate) :
                new ObjectParameter("tripenddate", typeof(System.DateTime));
    
            var driverMobileNoParameter = driverMobileNo != null ?
                new ObjectParameter("DriverMobileNo", driverMobileNo) :
                new ObjectParameter("DriverMobileNo", typeof(string));
    
            var driverOwnerMobNoParameter = driverOwnerMobNo != null ?
                new ObjectParameter("DriverOwnerMobNo", driverOwnerMobNo) :
                new ObjectParameter("DriverOwnerMobNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateTrip", useridParameter, startlocParameter, endlocParameter, resulttolllistParameter, totalpaymentAmtParameter, tripPaymentModeParameter, paymentRecieptnoParameter, tripPaymentTransationIdParameter, tripPaymentGatewayParameter, vehicleNoParameter, vehicletypeParameter, triptypeParameter, tripstartdateParameter, tripenddateParameter, driverMobileNoParameter, driverOwnerMobNoParameter);
        }
    
        public virtual int dbLogger(string vMessage)
        {
            var vMessageParameter = vMessage != null ?
                new ObjectParameter("vMessage", vMessage) :
                new ObjectParameter("vMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dbLogger", vMessageParameter);
        }
    
        public virtual int Debug_CreateTrip()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Debug_CreateTrip");
        }
    
        public virtual int deductPaymentforTollPlazzaFromWallet(string useremail, Nullable<decimal> tollamount, Nullable<int> tripid, Nullable<int> tollPlazzId, string posRemark)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var tollamountParameter = tollamount.HasValue ?
                new ObjectParameter("tollamount", tollamount) :
                new ObjectParameter("tollamount", typeof(decimal));
    
            var tripidParameter = tripid.HasValue ?
                new ObjectParameter("tripid", tripid) :
                new ObjectParameter("tripid", typeof(int));
    
            var tollPlazzIdParameter = tollPlazzId.HasValue ?
                new ObjectParameter("tollPlazzId", tollPlazzId) :
                new ObjectParameter("tollPlazzId", typeof(int));
    
            var posRemarkParameter = posRemark != null ?
                new ObjectParameter("PosRemark", posRemark) :
                new ObjectParameter("PosRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deductPaymentforTollPlazzaFromWallet", useremailParameter, tollamountParameter, tripidParameter, tollPlazzIdParameter, posRemarkParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamAvailableandSoldsTags_Result> DistributorAndTeamAvailableandSoldsTags(string vdistid)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamAvailableandSoldsTags_Result>("DistributorAndTeamAvailableandSoldsTags", vdistidParameter);
        }
    
        public virtual ObjectResult<DistributorAvailableTags_Result> DistributorAvailableTags(string vdist, string vehicleType)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("vehicleType", vehicleType) :
                new ObjectParameter("vehicleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAvailableTags_Result>("DistributorAvailableTags", vdistParameter, vehicleTypeParameter);
        }
    
        public virtual int dontClickClearTrips()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dontClickClearTrips");
        }
    
        public virtual ObjectResult<GetDailyTickets_Result> GetDailyTickets(Nullable<int> tollPlazaID)
        {
            var tollPlazaIDParameter = tollPlazaID.HasValue ?
                new ObjectParameter("TollPlazaID", tollPlazaID) :
                new ObjectParameter("TollPlazaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDailyTickets_Result>("GetDailyTickets", tollPlazaIDParameter);
        }
    
        public virtual ObjectResult<GetDistributorAccountBalanceById_Result> GetDistributorAccountBalanceById(Nullable<int> vdistid)
        {
            var vdistidParameter = vdistid.HasValue ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistributorAccountBalanceById_Result>("GetDistributorAccountBalanceById", vdistidParameter);
        }
    
        public virtual ObjectResult<GetDistributorAndTeamUnSoldTag_Result> GetDistributorAndTeamUnSoldTag(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistributorAndTeamUnSoldTag_Result>("GetDistributorAndTeamUnSoldTag", vdistParameter);
        }
    
        public virtual ObjectResult<GetDistributorFullNameList_Result> GetDistributorFullNameList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistributorFullNameList_Result>("GetDistributorFullNameList");
        }
    
        public virtual ObjectResult<GetDistributorTags_Result> GetDistributorTags(string vDistributionID, string vVehicle_Type)
        {
            var vDistributionIDParameter = vDistributionID != null ?
                new ObjectParameter("vDistributionID", vDistributionID) :
                new ObjectParameter("vDistributionID", typeof(string));
    
            var vVehicle_TypeParameter = vVehicle_Type != null ?
                new ObjectParameter("vVehicle_Type", vVehicle_Type) :
                new ObjectParameter("vVehicle_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistributorTags_Result>("GetDistributorTags", vDistributionIDParameter, vVehicle_TypeParameter);
        }
    
        public virtual ObjectResult<string> GetLotList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLotList");
        }
    
        public virtual int GetRFIDDetails(Nullable<int> tollPlazaID, string rFID, Nullable<System.DateTime> rFIDTrackdate, ObjectParameter str)
        {
            var tollPlazaIDParameter = tollPlazaID.HasValue ?
                new ObjectParameter("TollPlazaID", tollPlazaID) :
                new ObjectParameter("TollPlazaID", typeof(int));
    
            var rFIDParameter = rFID != null ?
                new ObjectParameter("RFID", rFID) :
                new ObjectParameter("RFID", typeof(string));
    
            var rFIDTrackdateParameter = rFIDTrackdate.HasValue ?
                new ObjectParameter("RFIDTrackdate", rFIDTrackdate) :
                new ObjectParameter("RFIDTrackdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRFIDDetails", tollPlazaIDParameter, rFIDParameter, rFIDTrackdateParameter, str);
        }
    
        public virtual ObjectResult<string> GetRoutes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRoutes");
        }
    
        public virtual ObjectResult<GetSalesTeambyDistributorId_Result> GetSalesTeambyDistributorId(string vdistid)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesTeambyDistributorId_Result>("GetSalesTeambyDistributorId", vdistidParameter);
        }
    
        public virtual ObjectResult<GetTollPlazzDetailsByTripId_Result> GetTollPlazzDetailsByTripId(Nullable<int> tripid)
        {
            var tripidParameter = tripid.HasValue ?
                new ObjectParameter("tripid", tripid) :
                new ObjectParameter("tripid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTollPlazzDetailsByTripId_Result>("GetTollPlazzDetailsByTripId", tripidParameter);
        }
    
        public virtual ObjectResult<GetTollPriceByTollName_Result> GetTollPriceByTollName(string vtollplazaname)
        {
            var vtollplazanameParameter = vtollplazaname != null ?
                new ObjectParameter("vtollplazaname", vtollplazaname) :
                new ObjectParameter("vtollplazaname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTollPriceByTollName_Result>("GetTollPriceByTollName", vtollplazanameParameter);
        }
    
        public virtual ObjectResult<getTripPrices_Result> getTripPrices(string strinput)
        {
            var strinputParameter = strinput != null ?
                new ObjectParameter("strinput", strinput) :
                new ObjectParameter("strinput", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTripPrices_Result>("getTripPrices", strinputParameter);
        }
    
        public virtual ObjectResult<string> GetVehicleList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetVehicleList");
        }
    
        public virtual ObjectResult<GetVehicleTypeList_Result> GetVehicleTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVehicleTypeList_Result>("GetVehicleTypeList");
        }
    
        public virtual ObjectResult<GetVehicleTypeOfAvailableStockTags_Result> GetVehicleTypeOfAvailableStockTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVehicleTypeOfAvailableStockTags_Result>("GetVehicleTypeOfAvailableStockTags");
        }
    
        public virtual int InsertIntoUserTollTracker(Nullable<int> tripid, Nullable<int> tollid, string vehicleNo, Nullable<int> vtid, Nullable<decimal> tollamt, Nullable<bool> ismulti, Nullable<System.DateTime> tripDate, Nullable<System.DateTime> tripEndDate)
        {
            var tripidParameter = tripid.HasValue ?
                new ObjectParameter("tripid", tripid) :
                new ObjectParameter("tripid", typeof(int));
    
            var tollidParameter = tollid.HasValue ?
                new ObjectParameter("tollid", tollid) :
                new ObjectParameter("tollid", typeof(int));
    
            var vehicleNoParameter = vehicleNo != null ?
                new ObjectParameter("vehicleNo", vehicleNo) :
                new ObjectParameter("vehicleNo", typeof(string));
    
            var vtidParameter = vtid.HasValue ?
                new ObjectParameter("vtid", vtid) :
                new ObjectParameter("vtid", typeof(int));
    
            var tollamtParameter = tollamt.HasValue ?
                new ObjectParameter("tollamt", tollamt) :
                new ObjectParameter("tollamt", typeof(decimal));
    
            var ismultiParameter = ismulti.HasValue ?
                new ObjectParameter("ismulti", ismulti) :
                new ObjectParameter("ismulti", typeof(bool));
    
            var tripDateParameter = tripDate.HasValue ?
                new ObjectParameter("tripDate", tripDate) :
                new ObjectParameter("tripDate", typeof(System.DateTime));
    
            var tripEndDateParameter = tripEndDate.HasValue ?
                new ObjectParameter("tripEndDate", tripEndDate) :
                new ObjectParameter("tripEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIntoUserTollTracker", tripidParameter, tollidParameter, vehicleNoParameter, vtidParameter, tollamtParameter, ismultiParameter, tripDateParameter, tripEndDateParameter);
        }
    
        public virtual int InsertTicket(Nullable<int> tripId, Nullable<int> tollPlazzaNo, string vehicleNumber, Nullable<int> vehicleType, Nullable<decimal> tollCost, string isVerifiedByToll, string isCostDeducted, string isSettlementDone, string tollRemark)
        {
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            var tollPlazzaNoParameter = tollPlazzaNo.HasValue ?
                new ObjectParameter("TollPlazzaNo", tollPlazzaNo) :
                new ObjectParameter("TollPlazzaNo", typeof(int));
    
            var vehicleNumberParameter = vehicleNumber != null ?
                new ObjectParameter("VehicleNumber", vehicleNumber) :
                new ObjectParameter("VehicleNumber", typeof(string));
    
            var vehicleTypeParameter = vehicleType.HasValue ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(int));
    
            var tollCostParameter = tollCost.HasValue ?
                new ObjectParameter("TollCost", tollCost) :
                new ObjectParameter("TollCost", typeof(decimal));
    
            var isVerifiedByTollParameter = isVerifiedByToll != null ?
                new ObjectParameter("isVerifiedByToll", isVerifiedByToll) :
                new ObjectParameter("isVerifiedByToll", typeof(string));
    
            var isCostDeductedParameter = isCostDeducted != null ?
                new ObjectParameter("isCostDeducted", isCostDeducted) :
                new ObjectParameter("isCostDeducted", typeof(string));
    
            var isSettlementDoneParameter = isSettlementDone != null ?
                new ObjectParameter("isSettlementDone", isSettlementDone) :
                new ObjectParameter("isSettlementDone", typeof(string));
    
            var tollRemarkParameter = tollRemark != null ?
                new ObjectParameter("TollRemark", tollRemark) :
                new ObjectParameter("TollRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTicket", tripIdParameter, tollPlazzaNoParameter, vehicleNumberParameter, vehicleTypeParameter, tollCostParameter, isVerifiedByTollParameter, isCostDeductedParameter, isSettlementDoneParameter, tollRemarkParameter);
        }
    
        public virtual ObjectResult<InwardList_Result> InwardList(string vVehicle_Type, string lot_Number, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vVehicle_TypeParameter = vVehicle_Type != null ?
                new ObjectParameter("vVehicle_Type", vVehicle_Type) :
                new ObjectParameter("vVehicle_Type", typeof(string));
    
            var lot_NumberParameter = lot_Number != null ?
                new ObjectParameter("Lot_Number", lot_Number) :
                new ObjectParameter("Lot_Number", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InwardList_Result>("InwardList", vVehicle_TypeParameter, lot_NumberParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<InwardQauntityByVehicleType_Result> InwardQauntityByVehicleType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InwardQauntityByVehicleType_Result>("InwardQauntityByVehicleType");
        }
    
        public virtual ObjectResult<InwardToatalTagByDate_Result> InwardToatalTagByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InwardToatalTagByDate_Result>("InwardToatalTagByDate");
        }
    
        public virtual ObjectResult<Nullable<int>> InwardTotalTagALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InwardTotalTagALL");
        }
    
        public virtual ObjectResult<QA_VerifyWallet_Result> QA_VerifyWallet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QA_VerifyWallet_Result>("QA_VerifyWallet");
        }
    
        public virtual ObjectResult<Report_ListOfDistributor_Result> Report_ListOfDistributor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_ListOfDistributor_Result>("Report_ListOfDistributor");
        }
    
        public virtual ObjectResult<ReportTodaySettlementAmount_Result> ReportTodaySettlementAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTodaySettlementAmount_Result>("ReportTodaySettlementAmount");
        }
    
        public virtual ObjectResult<ReportTodayTrip_Result> ReportTodayTrip()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTodayTrip_Result>("ReportTodayTrip");
        }
    
        public virtual ObjectResult<ReportTodayTripAmountByCollectionMode_Result> ReportTodayTripAmountByCollectionMode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTodayTripAmountByCollectionMode_Result>("ReportTodayTripAmountByCollectionMode");
        }
    
        public virtual ObjectResult<RespectiveDestributorTotalTags_Result> RespectiveDestributorTotalTags(string vDistInd, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vDistIndParameter = vDistInd != null ?
                new ObjectParameter("vDistInd", vDistInd) :
                new ObjectParameter("vDistInd", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RespectiveDestributorTotalTags_Result>("RespectiveDestributorTotalTags", vDistIndParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<salesreport_Result> salesreport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<salesreport_Result>("salesreport");
        }
    
        public virtual ObjectResult<SalesReportByDistributor_Result> SalesReportByDistributor(string vdistid, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesReportByDistributor_Result>("SalesReportByDistributor", vdistidParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<salesreportbyDistributorId_Result> salesreportbyDistributorId(string vdistid)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<salesreportbyDistributorId_Result>("salesreportbyDistributorId", vdistidParameter);
        }
    
        public virtual int sp_BackupDatabases(string databaseName, string backupType, string backupLocation)
        {
            var databaseNameParameter = databaseName != null ?
                new ObjectParameter("databaseName", databaseName) :
                new ObjectParameter("databaseName", typeof(string));
    
            var backupTypeParameter = backupType != null ?
                new ObjectParameter("backupType", backupType) :
                new ObjectParameter("backupType", typeof(string));
    
            var backupLocationParameter = backupLocation != null ?
                new ObjectParameter("backupLocation", backupLocation) :
                new ObjectParameter("backupLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BackupDatabases", databaseNameParameter, backupTypeParameter, backupLocationParameter);
        }
    
        public virtual ObjectResult<SP_Map_NCPI_TollPlaza_Result> SP_Map_NCPI_TollPlaza()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Map_NCPI_TollPlaza_Result>("SP_Map_NCPI_TollPlaza");
        }
    
        public virtual ObjectResult<TagStackByDistributor_Result> TagStackByDistributor(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TagStackByDistributor_Result>("TagStackByDistributor", vdistParameter);
        }
    
        public virtual ObjectResult<TodayVehicleByType_Result> TodayVehicleByType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TodayVehicleByType_Result>("TodayVehicleByType");
        }
    
        public virtual ObjectResult<TollPayTagStack_Result> TollPayTagStack()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TollPayTagStack_Result>("TollPayTagStack");
        }
    
        public virtual ObjectResult<TollRateFileCSV_Result> TollRateFileCSV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TollRateFileCSV_Result>("TollRateFileCSV");
        }
    
        public virtual ObjectResult<Nullable<int>> TotalInwardTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TotalInwardTags");
        }
    
        public virtual ObjectResult<Nullable<int>> TotalSaleReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TotalSaleReport");
        }
    
        public virtual int TP_GenerateFastTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TP_GenerateFastTags");
        }
    
        public virtual int TP_GenerateUserData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TP_GenerateUserData");
        }
    
        public virtual int UpdateGeoFenceforTesting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGeoFenceforTesting");
        }
    
        public virtual int updateTollTripAmt(Nullable<int> vTripId)
        {
            var vTripIdParameter = vTripId.HasValue ?
                new ObjectParameter("vTripId", vTripId) :
                new ObjectParameter("vTripId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateTollTripAmt", vTripIdParameter);
        }
    
        public virtual ObjectResult<UserTripStatus_Result> UserTripStatus(Nullable<int> userno)
        {
            var usernoParameter = userno.HasValue ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserTripStatus_Result>("UserTripStatus", usernoParameter);
        }
    
        public virtual ObjectResult<VehicalTypeAllInwardTags_Result> VehicalTypeAllInwardTags(string vehical_type, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vehical_typeParameter = vehical_type != null ?
                new ObjectParameter("vehical_type", vehical_type) :
                new ObjectParameter("vehical_type", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicalTypeAllInwardTags_Result>("VehicalTypeAllInwardTags", vehical_typeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<VehicalTypeAndTheirTags_Result> VehicalTypeAndTheirTags(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicalTypeAndTheirTags_Result>("VehicalTypeAndTheirTags", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<VehicalTypeAndTheirTagsAll_Result> VehicalTypeAndTheirTagsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicalTypeAndTheirTagsAll_Result>("VehicalTypeAndTheirTagsAll");
        }
    
        public virtual ObjectResult<VehicalTypeAndTheirTagsExceptAll_Result> VehicalTypeAndTheirTagsExceptAll(string vehical_type, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vehical_typeParameter = vehical_type != null ?
                new ObjectParameter("vehical_type", vehical_type) :
                new ObjectParameter("vehical_type", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicalTypeAndTheirTagsExceptAll_Result>("VehicalTypeAndTheirTagsExceptAll", vehical_typeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<VehicalTypeInwardTagsAll_Result> VehicalTypeInwardTagsAll(string vehical_type)
        {
            var vehical_typeParameter = vehical_type != null ?
                new ObjectParameter("vehical_type", vehical_type) :
                new ObjectParameter("vehical_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicalTypeInwardTagsAll_Result>("VehicalTypeInwardTagsAll", vehical_typeParameter);
        }
    
        public virtual ObjectResult<DistributorAccPassbook_Result> DistributorAccPassbook(string vdistid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAccPassbook_Result>("DistributorAccPassbook", vdistidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamCustomerList_Result> DistributorAndTeamCustomerList(string vdistid, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamCustomerList_Result>("DistributorAndTeamCustomerList", vdistidParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamSoldsTags_Result> DistributorAndTeamSoldsTags(string vdistid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamSoldsTags_Result>("DistributorAndTeamSoldsTags", vdistidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamStatistics_Result> DistributorAndTeamStatistics(string vdistid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamStatistics_Result>("DistributorAndTeamStatistics", vdistidParameter, startdateParameter, enddateParameter);
        }
    }
}
