//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DPTPWebAPI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DP_TPEntities : DbContext
    {
        public DP_TPEntities()
            : base("name=DP_TPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AF_DocTypeCodes> AF_DocTypeCodes { get; set; }
        public virtual DbSet<AF_ExceptionCodes> AF_ExceptionCodes { get; set; }
        public virtual DbSet<AF_GenericResponseCodes> AF_GenericResponseCodes { get; set; }
        public virtual DbSet<AF_TagResponseCodes> AF_TagResponseCodes { get; set; }
        public virtual DbSet<AF_VehicleClassificationCodes> AF_VehicleClassificationCodes { get; set; }
        public virtual DbSet<AppKey> AppKeys { get; set; }
        public virtual DbSet<AxisSetuAPILogger> AxisSetuAPILoggers { get; set; }
        public virtual DbSet<Bank_CreateWalletAPI> Bank_CreateWalletAPI { get; set; }
        public virtual DbSet<Bank_CreationWalletAPIResponse> Bank_CreationWalletAPIResponse { get; set; }
        public virtual DbSet<Bank_CustDedupeAPI> Bank_CustDedupeAPI { get; set; }
        public virtual DbSet<Bank_CustDedupeAPIResponse> Bank_CustDedupeAPIResponse { get; set; }
        public virtual DbSet<Bank_FASTagEnquiry> Bank_FASTagEnquiry { get; set; }
        public virtual DbSet<Bank_OTPGenerate> Bank_OTPGenerate { get; set; }
        public virtual DbSet<Bank_OTPGenerationResponse> Bank_OTPGenerationResponse { get; set; }
        public virtual DbSet<Bank_OTPValidationAPI> Bank_OTPValidationAPI { get; set; }
        public virtual DbSet<Bank_RechargeRequest> Bank_RechargeRequest { get; set; }
        public virtual DbSet<Bank_RechargeResponse> Bank_RechargeResponse { get; set; }
        public virtual DbSet<Bank_RechargeStatusEnquiry> Bank_RechargeStatusEnquiry { get; set; }
        public virtual DbSet<Bank_RechargeStatusEnquiryResponse> Bank_RechargeStatusEnquiryResponse { get; set; }
        public virtual DbSet<Bank_StatusEnquiryAPI> Bank_StatusEnquiryAPI { get; set; }
        public virtual DbSet<Bank_StatusEnquiryAPIResponse> Bank_StatusEnquiryAPIResponse { get; set; }
        public virtual DbSet<Bank_TagIssuance> Bank_TagIssuance { get; set; }
        public virtual DbSet<Bank_UpdateCIFAPI> Bank_UpdateCIFAPI { get; set; }
        public virtual DbSet<Bank_VehicleStatus> Bank_VehicleStatus { get; set; }
        public virtual DbSet<Bank_WalletBalance> Bank_WalletBalance { get; set; }
        public virtual DbSet<Bank_walletStatement> Bank_walletStatement { get; set; }
        public virtual DbSet<Distributor_Bill> Distributor_Bill { get; set; }
        public virtual DbSet<Distributor_BillDetails> Distributor_BillDetails { get; set; }
        public virtual DbSet<Distributor_Tag_Request> Distributor_Tag_Request { get; set; }
        public virtual DbSet<DistributorCreditAccount> DistributorCreditAccounts { get; set; }
        public virtual DbSet<ecom_RFID> ecom_RFID { get; set; }
        public virtual DbSet<IndusBank_APILogs> IndusBank_APILogs { get; set; }
        public virtual DbSet<IndusInd_CustomerKYC> IndusInd_CustomerKYC { get; set; }
        public virtual DbSet<IndusInd_CustomerRegistration> IndusInd_CustomerRegistration { get; set; }
        public virtual DbSet<IndusInd_Regions> IndusInd_Regions { get; set; }

        internal ObjectResult<UsersBy_OwnerID_Result> UsersBy_OwnerID(string v)
        {
            throw new NotImplementedException();
        }

        public virtual DbSet<IndusInd_TagRegistration> IndusInd_TagRegistration { get; set; }
        public virtual DbSet<IndusInd_TagStockDetails> IndusInd_TagStockDetails { get; set; }
        public virtual DbSet<IndusInd_Token_Secrete> IndusInd_Token_Secrete { get; set; }
        public virtual DbSet<IndusInd_VehicleClassDetails> IndusInd_VehicleClassDetails { get; set; }
        public virtual DbSet<IssuerFASTag> IssuerFASTags { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<MapperVehicleClass> MapperVehicleClasses { get; set; }
        public virtual DbSet<PaymentGatewayResponse> PaymentGatewayResponses { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<RFID_Tracker> RFID_Tracker { get; set; }
        public virtual DbSet<RouteTollsQuery> RouteTollsQueries { get; set; }
        public virtual DbSet<RTO> RTOes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tagActivateSuspendClose> tagActivateSuspendCloses { get; set; }
        public virtual DbSet<TollPayWallet> TollPayWallets { get; set; }
        public virtual DbSet<TollPlaza> TollPlazas { get; set; }
        public virtual DbSet<TollPlazaEmployee> TollPlazaEmployees { get; set; }
        public virtual DbSet<TollPlazzaIPAccess> TollPlazzaIPAccesses { get; set; }
        public virtual DbSet<TollPlazzPayment> TollPlazzPayments { get; set; }
        public virtual DbSet<TollVehicleType> TollVehicleTypes { get; set; }
        public virtual DbSet<TranP_MaterialTypes> TranP_MaterialTypes { get; set; }
        public virtual DbSet<TranP_TruckTrip_Payment> TranP_TruckTrip_Payment { get; set; }
        public virtual DbSet<TranP_TruckTrips> TranP_TruckTrips { get; set; }
        public virtual DbSet<TranP_TruckTypes> TranP_TruckTypes { get; set; }
        public virtual DbSet<User_Login_Audit> User_Login_Audit { get; set; }
        public virtual DbSet<User_Trip_Payment> User_Trip_Payment { get; set; }
        public virtual DbSet<User_Trips> User_Trips { get; set; }
        public virtual DbSet<User_Vehicle> User_Vehicle { get; set; }
        public virtual DbSet<UserBankDetail> UserBankDetails { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserTollTracker> UserTollTrackers { get; set; }
        public virtual DbSet<HistoryTollPlazza> HistoryTollPlazzas { get; set; }
    
        public virtual ObjectResult<AccountingofTagStackByDistributor_Result> AccountingofTagStackByDistributor(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccountingofTagStackByDistributor_Result>("AccountingofTagStackByDistributor", vdistParameter);
        }
    
        public virtual ObjectResult<ASPDistributorStockAllDistributer_Result> ASPDistributorStockAllDistributer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributorStockAllDistributer_Result>("ASPDistributorStockAllDistributer");
        }
    
        public virtual ObjectResult<ASPDistributorStockAllDistributorTags_Result> ASPDistributorStockAllDistributorTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributorStockAllDistributorTags_Result>("ASPDistributorStockAllDistributorTags");
        }
    
        public virtual ObjectResult<ASPDistributorStockBylSingleDistributorTags_Result> ASPDistributorStockBylSingleDistributorTags(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributorStockBylSingleDistributorTags_Result>("ASPDistributorStockBylSingleDistributorTags", vdistParameter);
        }
    
        public virtual ObjectResult<ASPDistributorWiseTeamCountandTagCount_Result> ASPDistributorWiseTeamCountandTagCount(Nullable<System.DateTime> startd, Nullable<System.DateTime> endd)
        {
            var startdParameter = startd.HasValue ?
                new ObjectParameter("startd", startd) :
                new ObjectParameter("startd", typeof(System.DateTime));
    
            var enddParameter = endd.HasValue ?
                new ObjectParameter("endd", endd) :
                new ObjectParameter("endd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPDistributorWiseTeamCountandTagCount_Result>("ASPDistributorWiseTeamCountandTagCount", startdParameter, enddParameter);
        }
    
        public virtual ObjectResult<ASPImportTagStockByDate_Result> ASPImportTagStockByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPImportTagStockByDate_Result>("ASPImportTagStockByDate");
        }
    
        public virtual ObjectResult<ASPImportTagStockByType_Result> ASPImportTagStockByType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPImportTagStockByType_Result>("ASPImportTagStockByType");
        }
    
        public virtual ObjectResult<ASPInwardDailyReport_Result> ASPInwardDailyReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardDailyReport_Result>("ASPInwardDailyReport");
        }
    
        public virtual ObjectResult<ASPInwardMonthlyReport_Result> ASPInwardMonthlyReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardMonthlyReport_Result>("ASPInwardMonthlyReport");
        }
    
        public virtual ObjectResult<ASPInwardQuarterlyReport_Result> ASPInwardQuarterlyReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardQuarterlyReport_Result>("ASPInwardQuarterlyReport");
        }
    
        public virtual ObjectResult<ASPInwardReportAllQuantity_Result> ASPInwardReportAllQuantity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardReportAllQuantity_Result>("ASPInwardReportAllQuantity");
        }
    
        public virtual ObjectResult<ASPInwardReportAllQuantityByDate_Result> ASPInwardReportAllQuantityByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("Start_date", start_date) :
                new ObjectParameter("Start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardReportAllQuantityByDate_Result>("ASPInwardReportAllQuantityByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPInwardReportAllTagsByDate_Result> ASPInwardReportAllTagsByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("Start_date", start_date) :
                new ObjectParameter("Start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardReportAllTagsByDate_Result>("ASPInwardReportAllTagsByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPInwardReportByDate_Result> ASPInwardReportByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("Start_date", start_date) :
                new ObjectParameter("Start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardReportByDate_Result>("ASPInwardReportByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPInwardReportDayWiseQuantity_Result> ASPInwardReportDayWiseQuantity(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardReportDayWiseQuantity_Result>("ASPInwardReportDayWiseQuantity", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPInwardWeeklyReport_Result> ASPInwardWeeklyReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardWeeklyReport_Result>("ASPInwardWeeklyReport");
        }
    
        public virtual ObjectResult<ASPInwardYearlyReport_Result> ASPInwardYearlyReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPInwardYearlyReport_Result>("ASPInwardYearlyReport");
        }
    
        public virtual ObjectResult<ASPOutwardAllDistributerNameByTagCount_Result> ASPOutwardAllDistributerNameByTagCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardAllDistributerNameByTagCount_Result>("ASPOutwardAllDistributerNameByTagCount");
        }
    
        public virtual ObjectResult<ASPOutwardDailyreport_Result> ASPOutwardDailyreport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardDailyreport_Result>("ASPOutwardDailyreport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPOutwardDailyReportAll_Result> ASPOutwardDailyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardDailyReportAll_Result>("ASPOutwardDailyReportAll");
        }
    
        public virtual ObjectResult<ASPOutwardMonthReport_Result> ASPOutwardMonthReport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardMonthReport_Result>("ASPOutwardMonthReport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPOutwardMonthReportAll_Result> ASPOutwardMonthReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardMonthReportAll_Result>("ASPOutwardMonthReportAll");
        }
    
        public virtual ObjectResult<ASPOutwardQuarterlyReport_Result> ASPOutwardQuarterlyReport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardQuarterlyReport_Result>("ASPOutwardQuarterlyReport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPOutwardQuarterlyReportAll_Result> ASPOutwardQuarterlyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardQuarterlyReportAll_Result>("ASPOutwardQuarterlyReportAll");
        }
    
        public virtual ObjectResult<ASPOutwardReportAllQuantity_Result> ASPOutwardReportAllQuantity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportAllQuantity_Result>("ASPOutwardReportAllQuantity");
        }
    
        public virtual ObjectResult<ASPOutwardReportAllQuantityByDate_Result> ASPOutwardReportAllQuantityByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportAllQuantityByDate_Result>("ASPOutwardReportAllQuantityByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportAllTagsByDate_Result> ASPOutwardReportAllTagsByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportAllTagsByDate_Result>("ASPOutwardReportAllTagsByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportByDate_Result> ASPOutwardReportByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportByDate_Result>("ASPOutwardReportByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportBySingleDistributorAllQuantity_Result> ASPOutwardReportBySingleDistributorAllQuantity(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportBySingleDistributorAllQuantity_Result>("ASPOutwardReportBySingleDistributorAllQuantity", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportBySingleDistributorQuantity_Result> ASPOutwardReportBySingleDistributorQuantity(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportBySingleDistributorQuantity_Result>("ASPOutwardReportBySingleDistributorQuantity", vdistParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportBySingleDistributorQuantityByDate_Result> ASPOutwardReportBySingleDistributorQuantityByDate(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportBySingleDistributorQuantityByDate_Result>("ASPOutwardReportBySingleDistributorQuantityByDate", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportBySingleDistributorTagsByDate_Result> ASPOutwardReportBySingleDistributorTagsByDate(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportBySingleDistributorTagsByDate_Result>("ASPOutwardReportBySingleDistributorTagsByDate", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportDayWiseQuantityAll_Result> ASPOutwardReportDayWiseQuantityAll(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportDayWiseQuantityAll_Result>("ASPOutwardReportDayWiseQuantityAll", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardReportDayWiseQuantityByDistributor_Result> ASPOutwardReportDayWiseQuantityByDistributor(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("Vdist", vdist) :
                new ObjectParameter("Vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardReportDayWiseQuantityByDistributor_Result>("ASPOutwardReportDayWiseQuantityByDistributor", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPOutwardWeeklyReport_Result> ASPOutwardWeeklyReport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardWeeklyReport_Result>("ASPOutwardWeeklyReport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPOutwardWeeklyReportAll_Result> ASPOutwardWeeklyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardWeeklyReportAll_Result>("ASPOutwardWeeklyReportAll");
        }
    
        public virtual ObjectResult<ASPOutwardYearlyReport_Result> ASPOutwardYearlyReport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardYearlyReport_Result>("ASPOutwardYearlyReport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPOutwardYearlyReportAll_Result> ASPOutwardYearlyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPOutwardYearlyReportAll_Result>("ASPOutwardYearlyReportAll");
        }
    
        public virtual ObjectResult<ASPSaleDailyreport_Result> ASPSaleDailyreport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleDailyreport_Result>("ASPSaleDailyreport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPSaleDailyReportAll_Result> ASPSaleDailyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleDailyReportAll_Result>("ASPSaleDailyReportAll");
        }
    
        public virtual ObjectResult<ASPSaleMonthlyreport_Result> ASPSaleMonthlyreport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleMonthlyreport_Result>("ASPSaleMonthlyreport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPSaleMonthlyReportAll_Result> ASPSaleMonthlyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleMonthlyReportAll_Result>("ASPSaleMonthlyReportAll");
        }
    
        public virtual ObjectResult<ASPSaleQuarterlyeport_Result> ASPSaleQuarterlyeport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleQuarterlyeport_Result>("ASPSaleQuarterlyeport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPSaleQuarterlyReportAll_Result> ASPSaleQuarterlyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleQuarterlyReportAll_Result>("ASPSaleQuarterlyReportAll");
        }
    
        public virtual ObjectResult<ASPSaleReportAllQuantity_Result> ASPSaleReportAllQuantity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportAllQuantity_Result>("ASPSaleReportAllQuantity");
        }
    
        public virtual ObjectResult<ASPSaleReportByDate_Result> ASPSaleReportByDate(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByDate_Result>("ASPSaleReportByDate", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportByDateAllDistributor_Result> ASPSaleReportByDateAllDistributor(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByDateAllDistributor_Result>("ASPSaleReportByDateAllDistributor", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportByDateAllDistributorQauntity_Result> ASPSaleReportByDateAllDistributorQauntity(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByDateAllDistributorQauntity_Result>("ASPSaleReportByDateAllDistributorQauntity", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportByDateSingleDistributor_Result> ASPSaleReportByDateSingleDistributor(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByDateSingleDistributor_Result>("ASPSaleReportByDateSingleDistributor", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportByDistributer_Result> ASPSaleReportByDistributer(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByDistributer_Result>("ASPSaleReportByDistributer", vdistParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportByDistributorTagdetail_Result> ASPSaleReportByDistributorTagdetail(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByDistributorTagdetail_Result>("ASPSaleReportByDistributorTagdetail", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportBySingleDistributorQauntityByDate_Result> ASPSaleReportBySingleDistributorQauntityByDate(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportBySingleDistributorQauntityByDate_Result>("ASPSaleReportBySingleDistributorQauntityByDate", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportByTagdetail_Result> ASPSaleReportByTagdetail(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportByTagdetail_Result>("ASPSaleReportByTagdetail", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportDayWiseQuantity_Result> ASPSaleReportDayWiseQuantity(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportDayWiseQuantity_Result>("ASPSaleReportDayWiseQuantity", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportDayWiseQuantityByDistributor_Result> ASPSaleReportDayWiseQuantityByDistributor(string vdist, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("Vdist", vdist) :
                new ObjectParameter("Vdist", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportDayWiseQuantityByDistributor_Result>("ASPSaleReportDayWiseQuantityByDistributor", vdistParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<ASPSaleReportSingleDistributorAllQuantity_Result> ASPSaleReportSingleDistributorAllQuantity(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleReportSingleDistributorAllQuantity_Result>("ASPSaleReportSingleDistributorAllQuantity", vdistParameter);
        }
    
        public virtual ObjectResult<ASPSalesWiseTeamCountandTagCount_Result> ASPSalesWiseTeamCountandTagCount(Nullable<System.DateTime> startd, Nullable<System.DateTime> endd)
        {
            var startdParameter = startd.HasValue ?
                new ObjectParameter("startd", startd) :
                new ObjectParameter("startd", typeof(System.DateTime));
    
            var enddParameter = endd.HasValue ?
                new ObjectParameter("endd", endd) :
                new ObjectParameter("endd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSalesWiseTeamCountandTagCount_Result>("ASPSalesWiseTeamCountandTagCount", startdParameter, enddParameter);
        }
    
        public virtual ObjectResult<ASPSaleWeeklyreport_Result> ASPSaleWeeklyreport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleWeeklyreport_Result>("ASPSaleWeeklyreport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPSaleWeeklyReportAll_Result> ASPSaleWeeklyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleWeeklyReportAll_Result>("ASPSaleWeeklyReportAll");
        }
    
        public virtual ObjectResult<ASPSaleYearlyReport_Result> ASPSaleYearlyReport(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleYearlyReport_Result>("ASPSaleYearlyReport", vdistParameter);
        }
    
        public virtual ObjectResult<ASPSaleYearlyReportAll_Result> ASPSaleYearlyReportAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSaleYearlyReportAll_Result>("ASPSaleYearlyReportAll");
        }
    
        public virtual ObjectResult<ASPSingleDistributorStock_Result> ASPSingleDistributorStock(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPSingleDistributorStock_Result>("ASPSingleDistributorStock", vdistParameter);
        }
    
        public virtual ObjectResult<ASPTollpayStock_Result> ASPTollpayStock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStock_Result>("ASPTollpayStock");
        }
    
        public virtual ObjectResult<ASPTollpayStockTags_Result> ASPTollpayStockTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ASPTollpayStockTags_Result>("ASPTollpayStockTags");
        }
    
        public virtual ObjectResult<ChartOnLineUserCount_Result> ChartOnLineUserCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartOnLineUserCount_Result>("ChartOnLineUserCount");
        }
    
        public virtual ObjectResult<ChartRollWiseEmployeeCounts_Result> ChartRollWiseEmployeeCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartRollWiseEmployeeCounts_Result>("ChartRollWiseEmployeeCounts");
        }
    
        public virtual ObjectResult<ChartSingleTollWiseAndDateWiseVehicleDetails_Result> ChartSingleTollWiseAndDateWiseVehicleDetails(Nullable<int> tollNo, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartSingleTollWiseAndDateWiseVehicleDetails_Result>("ChartSingleTollWiseAndDateWiseVehicleDetails", tollNoParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ChartSingleTollWiseTodayCollection_Result> ChartSingleTollWiseTodayCollection(Nullable<int> tollNo)
        {
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartSingleTollWiseTodayCollection_Result>("ChartSingleTollWiseTodayCollection", tollNoParameter);
        }
    
        public virtual ObjectResult<ChartSingleTollWiseTodayVehicleDetails_Result> ChartSingleTollWiseTodayVehicleDetails(Nullable<int> tollNo)
        {
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartSingleTollWiseTodayVehicleDetails_Result>("ChartSingleTollWiseTodayVehicleDetails", tollNoParameter);
        }
    
        public virtual ObjectResult<ChartTollNoAndDateWiseTotalCollection_Result> ChartTollNoAndDateWiseTotalCollection(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> tollNO)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var tollNOParameter = tollNO.HasValue ?
                new ObjectParameter("TollNO", tollNO) :
                new ObjectParameter("TollNO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartTollNoAndDateWiseTotalCollection_Result>("ChartTollNoAndDateWiseTotalCollection", startdateParameter, enddateParameter, tollNOParameter);
        }
    
        public virtual ObjectResult<ChartTollWiseHistoryCollection_Result> ChartTollWiseHistoryCollection(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> tollNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var tollNoParameter = tollNo.HasValue ?
                new ObjectParameter("TollNo", tollNo) :
                new ObjectParameter("TollNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartTollWiseHistoryCollection_Result>("ChartTollWiseHistoryCollection", startDateParameter, endDateParameter, tollNoParameter);
        }
    
        public virtual ObjectResult<ChartTollWiseTodayCollection_Result> ChartTollWiseTodayCollection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChartTollWiseTodayCollection_Result>("ChartTollWiseTodayCollection");
        }
    
        public virtual int ClearAxisBankAPITables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearAxisBankAPITables");
        }
    
        public virtual int CreateAdminPanelUser(string username, string password, string address, string userEmail, string mobile1)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var mobile1Parameter = mobile1 != null ?
                new ObjectParameter("mobile1", mobile1) :
                new ObjectParameter("mobile1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAdminPanelUser", usernameParameter, passwordParameter, addressParameter, userEmailParameter, mobile1Parameter);
        }
    
        public virtual int CreateHistoryTollPlazzTruncate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateHistoryTollPlazzTruncate");
        }
    
        public virtual int CreateTrip(Nullable<int> userid, string startloc, string endloc, string resulttolllist, Nullable<decimal> totalpaymentAmt, string tripPaymentMode, string paymentRecieptno, string tripPaymentTransationId, string tripPaymentGateway, string vehicleNo, string vehicletype, string triptype, Nullable<System.DateTime> tripstartdate, Nullable<System.DateTime> tripenddate, string driverMobileNo, string driverOwnerMobNo)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var startlocParameter = startloc != null ?
                new ObjectParameter("startloc", startloc) :
                new ObjectParameter("startloc", typeof(string));
    
            var endlocParameter = endloc != null ?
                new ObjectParameter("endloc", endloc) :
                new ObjectParameter("endloc", typeof(string));
    
            var resulttolllistParameter = resulttolllist != null ?
                new ObjectParameter("resulttolllist", resulttolllist) :
                new ObjectParameter("resulttolllist", typeof(string));
    
            var totalpaymentAmtParameter = totalpaymentAmt.HasValue ?
                new ObjectParameter("totalpaymentAmt", totalpaymentAmt) :
                new ObjectParameter("totalpaymentAmt", typeof(decimal));
    
            var tripPaymentModeParameter = tripPaymentMode != null ?
                new ObjectParameter("tripPaymentMode", tripPaymentMode) :
                new ObjectParameter("tripPaymentMode", typeof(string));
    
            var paymentRecieptnoParameter = paymentRecieptno != null ?
                new ObjectParameter("paymentRecieptno", paymentRecieptno) :
                new ObjectParameter("paymentRecieptno", typeof(string));
    
            var tripPaymentTransationIdParameter = tripPaymentTransationId != null ?
                new ObjectParameter("TripPaymentTransationId", tripPaymentTransationId) :
                new ObjectParameter("TripPaymentTransationId", typeof(string));
    
            var tripPaymentGatewayParameter = tripPaymentGateway != null ?
                new ObjectParameter("TripPaymentGateway", tripPaymentGateway) :
                new ObjectParameter("TripPaymentGateway", typeof(string));
    
            var vehicleNoParameter = vehicleNo != null ?
                new ObjectParameter("vehicleNo", vehicleNo) :
                new ObjectParameter("vehicleNo", typeof(string));
    
            var vehicletypeParameter = vehicletype != null ?
                new ObjectParameter("vehicletype", vehicletype) :
                new ObjectParameter("vehicletype", typeof(string));
    
            var triptypeParameter = triptype != null ?
                new ObjectParameter("triptype", triptype) :
                new ObjectParameter("triptype", typeof(string));
    
            var tripstartdateParameter = tripstartdate.HasValue ?
                new ObjectParameter("tripstartdate", tripstartdate) :
                new ObjectParameter("tripstartdate", typeof(System.DateTime));
    
            var tripenddateParameter = tripenddate.HasValue ?
                new ObjectParameter("tripenddate", tripenddate) :
                new ObjectParameter("tripenddate", typeof(System.DateTime));
    
            var driverMobileNoParameter = driverMobileNo != null ?
                new ObjectParameter("DriverMobileNo", driverMobileNo) :
                new ObjectParameter("DriverMobileNo", typeof(string));
    
            var driverOwnerMobNoParameter = driverOwnerMobNo != null ?
                new ObjectParameter("DriverOwnerMobNo", driverOwnerMobNo) :
                new ObjectParameter("DriverOwnerMobNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateTrip", useridParameter, startlocParameter, endlocParameter, resulttolllistParameter, totalpaymentAmtParameter, tripPaymentModeParameter, paymentRecieptnoParameter, tripPaymentTransationIdParameter, tripPaymentGatewayParameter, vehicleNoParameter, vehicletypeParameter, triptypeParameter, tripstartdateParameter, tripenddateParameter, driverMobileNoParameter, driverOwnerMobNoParameter);
        }
    
        public virtual int dbLogger(string vMessage)
        {
            var vMessageParameter = vMessage != null ?
                new ObjectParameter("vMessage", vMessage) :
                new ObjectParameter("vMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dbLogger", vMessageParameter);
        }
    
        public virtual int Debug_CreateTrip()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Debug_CreateTrip");
        }
    
        public virtual int deductPaymentforTollPlazzaFromWallet(string useremail, Nullable<decimal> tollamount, Nullable<int> tripid, Nullable<int> tollPlazzId, string posRemark)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var tollamountParameter = tollamount.HasValue ?
                new ObjectParameter("tollamount", tollamount) :
                new ObjectParameter("tollamount", typeof(decimal));
    
            var tripidParameter = tripid.HasValue ?
                new ObjectParameter("tripid", tripid) :
                new ObjectParameter("tripid", typeof(int));
    
            var tollPlazzIdParameter = tollPlazzId.HasValue ?
                new ObjectParameter("tollPlazzId", tollPlazzId) :
                new ObjectParameter("tollPlazzId", typeof(int));
    
            var posRemarkParameter = posRemark != null ?
                new ObjectParameter("PosRemark", posRemark) :
                new ObjectParameter("PosRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deductPaymentforTollPlazzaFromWallet", useremailParameter, tollamountParameter, tripidParameter, tollPlazzIdParameter, posRemarkParameter);
        }
    
        public virtual ObjectResult<DistributorAccPassbook_Result> DistributorAccPassbook(string vdistid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAccPassbook_Result>("DistributorAccPassbook", vdistidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamCustomerList_Result> DistributorAndTeamCustomerList(string vdistid, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamCustomerList_Result>("DistributorAndTeamCustomerList", vdistidParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamSoldsTags_Result> DistributorAndTeamSoldsTags(string vdistid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamSoldsTags_Result>("DistributorAndTeamSoldsTags", vdistidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamStatistics_Result> DistributorAndTeamStatistics(string vdistid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamStatistics_Result>("DistributorAndTeamStatistics", vdistidParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<DistributorAndTeamUnSoldsTags_Result> DistributorAndTeamUnSoldsTags(string vdistid)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DistributorAndTeamUnSoldsTags_Result>("DistributorAndTeamUnSoldsTags", vdistidParameter);
        }
    
        public virtual int dontClickClearTrips()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dontClickClearTrips");
        }
    
        public virtual ObjectResult<FastagRechargeTransaction_Result> FastagRechargeTransaction(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FastagRechargeTransaction_Result>("FastagRechargeTransaction", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<FastagRechargeTransactionByCustomer_Result> FastagRechargeTransactionByCustomer(string custUsername)
        {
            var custUsernameParameter = custUsername != null ?
                new ObjectParameter("CustUsername", custUsername) :
                new ObjectParameter("CustUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FastagRechargeTransactionByCustomer_Result>("FastagRechargeTransactionByCustomer", custUsernameParameter);
        }
    
        public virtual ObjectResult<FastagTransaction_Result> FastagTransaction()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FastagTransaction_Result>("FastagTransaction");
        }
    
        public virtual ObjectResult<GetDailyTickets_Result> GetDailyTickets(Nullable<int> tollPlazaID)
        {
            var tollPlazaIDParameter = tollPlazaID.HasValue ?
                new ObjectParameter("TollPlazaID", tollPlazaID) :
                new ObjectParameter("TollPlazaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDailyTickets_Result>("GetDailyTickets", tollPlazaIDParameter);
        }
    
        public virtual ObjectResult<GetDistributorAndTeamUnSoldTag_Result> GetDistributorAndTeamUnSoldTag(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistributorAndTeamUnSoldTag_Result>("GetDistributorAndTeamUnSoldTag", vdistParameter);
        }
    
        public virtual ObjectResult<GetDistributorFullNameList_Result> GetDistributorFullNameList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistributorFullNameList_Result>("GetDistributorFullNameList");
        }
    
        public virtual ObjectResult<GetDistributorTags_Result> GetDistributorTags(string vDistributionID, string vVehicle_Type)
        {
            var vDistributionIDParameter = vDistributionID != null ?
                new ObjectParameter("vDistributionID", vDistributionID) :
                new ObjectParameter("vDistributionID", typeof(string));
    
            var vVehicle_TypeParameter = vVehicle_Type != null ?
                new ObjectParameter("vVehicle_Type", vVehicle_Type) :
                new ObjectParameter("vVehicle_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDistributorTags_Result>("GetDistributorTags", vDistributionIDParameter, vVehicle_TypeParameter);
        }
    
        public virtual int GetRFIDDetails(Nullable<int> tollPlazaID, string rFID, Nullable<System.DateTime> rFIDTrackdate, ObjectParameter str)
        {
            var tollPlazaIDParameter = tollPlazaID.HasValue ?
                new ObjectParameter("TollPlazaID", tollPlazaID) :
                new ObjectParameter("TollPlazaID", typeof(int));
    
            var rFIDParameter = rFID != null ?
                new ObjectParameter("RFID", rFID) :
                new ObjectParameter("RFID", typeof(string));
    
            var rFIDTrackdateParameter = rFIDTrackdate.HasValue ?
                new ObjectParameter("RFIDTrackdate", rFIDTrackdate) :
                new ObjectParameter("RFIDTrackdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRFIDDetails", tollPlazaIDParameter, rFIDParameter, rFIDTrackdateParameter, str);
        }
    
        public virtual ObjectResult<string> GetRoutes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRoutes");
        }
    
        public virtual ObjectResult<GetSalesTeambyDistributorId_Result> GetSalesTeambyDistributorId(string vdistid)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesTeambyDistributorId_Result>("GetSalesTeambyDistributorId", vdistidParameter);
        }
    
        public virtual ObjectResult<GetTollPlazzDetailsByTripId_Result> GetTollPlazzDetailsByTripId(Nullable<int> tripid)
        {
            var tripidParameter = tripid.HasValue ?
                new ObjectParameter("tripid", tripid) :
                new ObjectParameter("tripid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTollPlazzDetailsByTripId_Result>("GetTollPlazzDetailsByTripId", tripidParameter);
        }
    
        public virtual ObjectResult<GetTollPriceByTollName_Result> GetTollPriceByTollName(string vtollplazaname)
        {
            var vtollplazanameParameter = vtollplazaname != null ?
                new ObjectParameter("vtollplazaname", vtollplazaname) :
                new ObjectParameter("vtollplazaname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTollPriceByTollName_Result>("GetTollPriceByTollName", vtollplazanameParameter);
        }
    
        public virtual ObjectResult<getTripPrices_Result> getTripPrices(string strinput)
        {
            var strinputParameter = strinput != null ?
                new ObjectParameter("strinput", strinput) :
                new ObjectParameter("strinput", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTripPrices_Result>("getTripPrices", strinputParameter);
        }
    
        public virtual ObjectResult<GetVehicleTypeOfAvailableStockTags_Result> GetVehicleTypeOfAvailableStockTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVehicleTypeOfAvailableStockTags_Result>("GetVehicleTypeOfAvailableStockTags");
        }
    
        public virtual int InsertIntoUserTollTracker(Nullable<int> tripid, Nullable<int> tollid, string vehicleNo, Nullable<int> vtid, Nullable<decimal> tollamt, Nullable<bool> ismulti, Nullable<System.DateTime> tripDate, Nullable<System.DateTime> tripEndDate)
        {
            var tripidParameter = tripid.HasValue ?
                new ObjectParameter("tripid", tripid) :
                new ObjectParameter("tripid", typeof(int));
    
            var tollidParameter = tollid.HasValue ?
                new ObjectParameter("tollid", tollid) :
                new ObjectParameter("tollid", typeof(int));
    
            var vehicleNoParameter = vehicleNo != null ?
                new ObjectParameter("vehicleNo", vehicleNo) :
                new ObjectParameter("vehicleNo", typeof(string));
    
            var vtidParameter = vtid.HasValue ?
                new ObjectParameter("vtid", vtid) :
                new ObjectParameter("vtid", typeof(int));
    
            var tollamtParameter = tollamt.HasValue ?
                new ObjectParameter("tollamt", tollamt) :
                new ObjectParameter("tollamt", typeof(decimal));
    
            var ismultiParameter = ismulti.HasValue ?
                new ObjectParameter("ismulti", ismulti) :
                new ObjectParameter("ismulti", typeof(bool));
    
            var tripDateParameter = tripDate.HasValue ?
                new ObjectParameter("tripDate", tripDate) :
                new ObjectParameter("tripDate", typeof(System.DateTime));
    
            var tripEndDateParameter = tripEndDate.HasValue ?
                new ObjectParameter("tripEndDate", tripEndDate) :
                new ObjectParameter("tripEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIntoUserTollTracker", tripidParameter, tollidParameter, vehicleNoParameter, vtidParameter, tollamtParameter, ismultiParameter, tripDateParameter, tripEndDateParameter);
        }
    
        public virtual int InsertTicket(Nullable<int> tripId, Nullable<int> tollPlazzaNo, string vehicleNumber, Nullable<int> vehicleType, Nullable<decimal> tollCost, string isVerifiedByToll, string isCostDeducted, string isSettlementDone, string tollRemark)
        {
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            var tollPlazzaNoParameter = tollPlazzaNo.HasValue ?
                new ObjectParameter("TollPlazzaNo", tollPlazzaNo) :
                new ObjectParameter("TollPlazzaNo", typeof(int));
    
            var vehicleNumberParameter = vehicleNumber != null ?
                new ObjectParameter("VehicleNumber", vehicleNumber) :
                new ObjectParameter("VehicleNumber", typeof(string));
    
            var vehicleTypeParameter = vehicleType.HasValue ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(int));
    
            var tollCostParameter = tollCost.HasValue ?
                new ObjectParameter("TollCost", tollCost) :
                new ObjectParameter("TollCost", typeof(decimal));
    
            var isVerifiedByTollParameter = isVerifiedByToll != null ?
                new ObjectParameter("isVerifiedByToll", isVerifiedByToll) :
                new ObjectParameter("isVerifiedByToll", typeof(string));
    
            var isCostDeductedParameter = isCostDeducted != null ?
                new ObjectParameter("isCostDeducted", isCostDeducted) :
                new ObjectParameter("isCostDeducted", typeof(string));
    
            var isSettlementDoneParameter = isSettlementDone != null ?
                new ObjectParameter("isSettlementDone", isSettlementDone) :
                new ObjectParameter("isSettlementDone", typeof(string));
    
            var tollRemarkParameter = tollRemark != null ?
                new ObjectParameter("TollRemark", tollRemark) :
                new ObjectParameter("TollRemark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTicket", tripIdParameter, tollPlazzaNoParameter, vehicleNumberParameter, vehicleTypeParameter, tollCostParameter, isVerifiedByTollParameter, isCostDeductedParameter, isSettlementDoneParameter, tollRemarkParameter);
        }
    
        public virtual ObjectResult<QA_VerifyWallet_Result> QA_VerifyWallet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QA_VerifyWallet_Result>("QA_VerifyWallet");
        }
    
        public virtual ObjectResult<Report_ListOfDistributor_Result> Report_ListOfDistributor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_ListOfDistributor_Result>("Report_ListOfDistributor");
        }
    
        public virtual ObjectResult<ReportTodaySettlementAmount_Result> ReportTodaySettlementAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTodaySettlementAmount_Result>("ReportTodaySettlementAmount");
        }
    
        public virtual ObjectResult<ReportTodayTrip_Result> ReportTodayTrip()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTodayTrip_Result>("ReportTodayTrip");
        }
    
        public virtual ObjectResult<ReportTodayTripAmountByCollectionMode_Result> ReportTodayTripAmountByCollectionMode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportTodayTripAmountByCollectionMode_Result>("ReportTodayTripAmountByCollectionMode");
        }
    
        public virtual ObjectResult<Nullable<int>> S()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("S");
        }
    
        public virtual ObjectResult<salesreport_Result> salesreport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<salesreport_Result>("salesreport");
        }
    
        public virtual ObjectResult<salesreportbyDistributorId_Result> salesreportbyDistributorId(string vdistid)
        {
            var vdistidParameter = vdistid != null ?
                new ObjectParameter("vdistid", vdistid) :
                new ObjectParameter("vdistid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<salesreportbyDistributorId_Result>("salesreportbyDistributorId", vdistidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SolDCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SolDCount");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_BackupDatabases(string databaseName, string backupType, string backupLocation)
        {
            var databaseNameParameter = databaseName != null ?
                new ObjectParameter("databaseName", databaseName) :
                new ObjectParameter("databaseName", typeof(string));
    
            var backupTypeParameter = backupType != null ?
                new ObjectParameter("backupType", backupType) :
                new ObjectParameter("backupType", typeof(string));
    
            var backupLocationParameter = backupLocation != null ?
                new ObjectParameter("backupLocation", backupLocation) :
                new ObjectParameter("backupLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BackupDatabases", databaseNameParameter, backupTypeParameter, backupLocationParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_Map_NCPI_TollPlaza_Result> SP_Map_NCPI_TollPlaza()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Map_NCPI_TollPlaza_Result>("SP_Map_NCPI_TollPlaza");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TagStackByDistributor_Result> TagStackByDistributor(string vdist)
        {
            var vdistParameter = vdist != null ?
                new ObjectParameter("vdist", vdist) :
                new ObjectParameter("vdist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TagStackByDistributor_Result>("TagStackByDistributor", vdistParameter);
        }
    
        public virtual ObjectResult<TodayVehicleByType_Result> TodayVehicleByType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TodayVehicleByType_Result>("TodayVehicleByType");
        }
    
        public virtual ObjectResult<TollPayTagStack_Result> TollPayTagStack()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TollPayTagStack_Result>("TollPayTagStack");
        }
    
        public virtual ObjectResult<TollRateFileCSV_Result> TollRateFileCSV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TollRateFileCSV_Result>("TollRateFileCSV");
        }
    
        public virtual int TP_GenerateFastTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TP_GenerateFastTags");
        }
    
        public virtual int TP_GenerateUserData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TP_GenerateUserData");
        }
    
        public virtual int UpdateGeoFenceforTesting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGeoFenceforTesting");
        }
    
        public virtual int updateTollTripAmt(Nullable<int> vTripId)
        {
            var vTripIdParameter = vTripId.HasValue ?
                new ObjectParameter("vTripId", vTripId) :
                new ObjectParameter("vTripId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateTollTripAmt", vTripIdParameter);
        }
    
        public virtual ObjectResult<UsersBy_OwnerID_Result> UsersBy_OwnerID(Nullable<int> ownerID)
        {
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("ownerID", ownerID) :
                new ObjectParameter("ownerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersBy_OwnerID_Result>("UsersBy_OwnerID", ownerIDParameter);
        }
    
        public virtual ObjectResult<UserTripStatus_Result> UserTripStatus(Nullable<int> userno)
        {
            var usernoParameter = userno.HasValue ?
                new ObjectParameter("userno", userno) :
                new ObjectParameter("userno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserTripStatus_Result>("UserTripStatus", usernoParameter);
        }
    }
}
